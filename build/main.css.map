{"version":3,"sources":["../bower_components/o-ft-icons/scss/_mixins.scss","../bower_components/o-ft-icons/scss/_variables.scss","main.scss","../bower_components/o-buttons/scss/_mixins.scss","../bower_components/o-buttons/scss/_variables.scss","../bower_components/o-icons/scss/_mixins.scss"],"names":[],"mappings":"AAqEE;EACC,wBCnD+B;EDoD/B,2FAAQ;EACR,+UAE6E;EAC7E,oBAAoB;EACpB,mBAAmB,EAAA;;AEtEtB;EACC,sBAAsB;EACnB,mBAAmB,EAgFtB;EAlFD;IAKE,mBAAmB;IACnB,UAAU;IACV,QAAQ;IACR,OAAO;IACP,SAAS;IACT,eAAe;IACf,kBAAkB;IAClB,uBAAuB;IACvB,qBAAqB,EAoCrB;IAjDF;MAiBG,qBAAqB;MACrB,sBAAsB;MC4ExB,sBAAsB;MACtB,+BAAuB;MAAvB,uBAAuB;MACvB,uBAAuB;MACvB,UAAU;MACV,WAAW;MACX,oBAAoB;MACpB,mBAAmB;MACnB,sBAAsB;MACtB,mCCtF4C;MDuF5C,iBClF0B;MDmF1B,mBC7C6B;MD8C7B,gBAAgB;MAChB,6FAAqF;MAArF,qFAAqF;MACrF,sBAAsB;MACtB,yBAAyB;MACzB,0BAAkB;MAAlB,uBAAkB;MAAlB,sBAAkB;MAAlB,kBAAkB;MAClB,6BAA6B;MAE7B,oCAAoC;MACpC,mCAAmC;MApGnC,sBCiCsB;MDhCtB,iBCkCiB;MDjCjB,gBCkCgB;MDjChB,2BCkCmB;MDjCnB,gBC8BgB;MD7BhB,kBAAoB;MACpB,kBCiCkB;MDtBhB,eAAc;MAAd,wCAAc;MAAd,sCAAc,EDkBd;MAhDH;QC8BG,eAAc;QAAd,qCAAc;QAAd,sCAAc,EAsBf;MDpDF;;QC8BG,0BAAc;QAAd,sCAAc,EA+Bd;MD7DH;QC8BG,eAAc,EAkCd;MDhEH;QC0HE,qBAAqB;QACrB,aAAa;QACb,gBAAgB,EAChB;MD7HF;QCiIE,UAAU;QACV,WAAW,EACX;MDnIF;QAsBI,mBAAmB;QACnB,UAAU;QACV,SAAS;QACT,yCAAoB;QAApB,qCAAoB;QAApB,iCAAoB;QACpB,mBAAmB;QACnB,aAAa;QACb,YAAY;QACZ,aAAa;QACb,WAAW;QACX,UAAU;QACV,mBAAmB;QACnB,aAAa;QGdf,uIAAqB;QAMtB,qJAAwF;QAExF,YAAuB;QAIvB,aAAyB;QASzB,sBAAsB;QACtB,6BAA6B;QAG7B,yBAAyB;QACzB,yBAAyB;QACzB,8BAA8B;QAC9B,uBAAuB,EHZpB;MAnCJ;QAsCI,sBAAsB;QACtB,YAAY;QACZ,aAAa;QACb,cAAc;QACd,gEAA+D;QAC/D,yBAAyB;QACzB,oBAAoB;QACpB,kBAAkB;QAClB,oBAAoB,EACpB;EA/CJ;IAoDE,yBAAyB,EACzB;EArDF;IAyDG,iCAAiC,EACjC;EA1DH;IAyDG,iCAAiC,EACjC;EA1DH;IAyDG,iCAAiC,EACjC;EA1DH;IAyDG,iCAAiC,EACjC;EA1DH;IA6DG,yBAAyB,EACzB;EA9DH;IA6DG,yBAAyB,EACzB;EA9DH;IA6DG,yBAAyB,EACzB;EA9DH;IA6DG,yBAAyB,EACzB;EA9DH;IAkEG,iCAAiC,EACjC;EAnEH;IAsEG,yBAAyB,EACzB;EAvEH;IA2EG,iCAAiC,EACjC;EA5EH;IA+EG,yBAAyB,EACzB","file":"main.css","sourcesContent":["////\n/// @group o-ft-icons\n/// @link http://registry.origami.ft.com/components/o-ft-icons\n////\n\n/// Generate an aggregated list of selectors for an icon\n///\n/// @param {String} icon\n@function oFtIconsGetSelectors($icon) {\n\t$aggregated-selector: ();\n\t$aggregated-selector: append($aggregated-selector, unquote('%o-ft-icons-#{$icon}'), comma);\n\t@if ($o-ft-icons-is-silent == false) {\n\t\t$aggregated-selector: append($aggregated-selector, unquote('.o-ft-icons-#{$icon}'), comma);\n\t}\n\t@return $aggregated-selector;\n}\n\n/// Get an SVG icon with PNG fallback for ie6-8\n///\n/// @param {String} $icon-name - this should be a reference to an icon included in o-ft-icons eg arrow-down\n/// @param {String} $color - this should be a hex colour value. Used to color the icon. We suggest using an o-colors an o-colors function.\n/// @param {String} $container-width - this is the width to set the icon containing element to. Defaults to 20px. This value is also used to request a PNG fallback of the right size from the image service.\n/// @param {String} $container-height - this is the height to set the icon containing element to. Defaults to null, and will use the value of $container-width\n/// @param {Bool} $apply-base-styles - defaults to true. If true, will output style rules for the container. If false will only output the background-image property\n/// @param {Bool} $use-local-assets - defaults to true, if true will look for the SVGs to use locally rather than via the image service. Doesn't apply to the fallback which will always be requested from the image service.\n\n@mixin oFtIconsGetSvg($icon-name, $color: null, $container-width: 20, $container-height: null, $apply-base-styles: true) {\n\t$service-url: \"https://image.webservices.ft.com/v1/images/raw/fticon:#{$icon-name}\";\n\t$query: \"?source=ofticons\";\n\n\t@if $color != null {\n\t\t$color: str-slice(ie-hex-str($color), 4);\n\t\t$query: $query + \"&tint=%23#{$color},%23#{$color}\";\n\t}\n\n\t@if ($o-ft-icons-use-local-assets == true and $color == null) {\n\t\tbackground-image: url(oAssetsResolve(\"svg/#{$icon-name}.svg\", o-ft-icons));\n\t} @else {\n\t\tbackground-image: url($service-url + $query + \"&format=svg\");\n\t}\n\n\t// ie7/8 fallback. Uses the `\\9` selector hack to target ie6-8.\n\t// Hack is documented here: http://browserhacks.com/#hack-ab1bcc7b3a6544c99260f7608f8e845e\n\t// It still needs to use the build service  <-- what does this comment mean?\n\tbackground-image: url($service-url + $query + \"&format=png&width=#{$container-width}\")\\9;\n\n\t@if ($apply-base-styles == true) {\n\t\tdisplay: inline-block;\n\t\twidth: $container-width + 0px;\n\t\t@if ($container-height == null) {\n\t\t\t$container-height: $container-width;\n\t\t}\n\t\theight: $container-height + 0px;\n\t\tbackground-repeat: no-repeat;\n\n\t\t// Doesn't work in ie8/7/6 in these cases the icon will fill the available space,\n\t\t// which is fine if the containing box is the same shape as the icon (which they mostly will be)\n\t\tbackground-size: contain;\n\t\tbackground-position: 50%;\n\t\tbackground-color: transparent;\n\t\tvertical-align: middle;\n\t}\n}\n\n/// Outputs font family and source\n@mixin oFtIconsFontFace() {\n\t@if ($_o-ft-icons-font-face-already-output == false) {\n\t\t$_o-ft-icons-font-face-already-output: true !global;\n\n\t\t@font-face {\n\t\t\tfont-family: $_o-ft-icons-font-name;\n\t\t\tsrc: url(oAssetsResolve($_o-ft-icons-font-file-name + \".eot\", o-ft-icons));\n\t\t\tsrc: url(oAssetsResolve($_o-ft-icons-font-file-name + \".eot?#iefix\", o-ft-icons)) format(\"embedded-opentype\"),\n\t\t\t\turl(oAssetsResolve($_o-ft-icons-font-file-name + \".woff\", o-ft-icons)) format(\"woff\"),\n\t\t\t\turl(oAssetsResolve($_o-ft-icons-font-file-name + \".ttf\", o-ft-icons)) format(\"truetype\");\n\t\t\tfont-weight: normal;\n\t\t\tfont-style: normal;\n\t\t}\n\t}\n}\n\n/// Base styles for all icons\n@mixin oFtIconsBaseIconStyles() {\n\tfont-family: $_o-ft-icons-font-name;\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\t// These are marked as !important as the icon font is not designed to be used with faux bold or faux italic styles\n\t// If bolder versions of an icon are required a new SVG should be designed and added to the icon font\n\t// scss-lint:disable ImportantRule\n\tfont-weight: normal !important;\n\tfont-style: normal !important;\n\tspeak: none;\n\ttext-decoration: inherit;\n\ttext-transform: none;\n\ttext-rendering: optimizeLegibility;\n\t// scss-lint:disable VendorPrefix VendorPrefixes\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\n/// Placeholder (and optionally concrete class) for individual icon (modern browsers)\n///\n/// @access private\n///\n/// @param {String} $icon-class\n/// @param {String} $character-code - Unicode character code (e.g. f101)\n/// @param {String} $placement [before] - before|after\n@mixin _oFtIconsStandardsIcon($icon-class, $character-code, $placement: 'before') {\n\t$icon-selectors: oFtIconsGetSelectors(\"#{$icon-class}:#{$placement}\");\n\t#{$icon-selectors} {\n\t\t// Escaping in Sass is a bit of a mess…\n\t\t// https://github.com/sass/sass/issues/659\n\t\t@if function-exists(selector-nest) {\n\t\t\t// Sass 3.4\n\t\t\tcontent: #{'\\\"\\\\' + $character-code + \"\\\"\"};\n\t\t} @else {\n\t\t\t// LibSass\n\t\t\t// Escaping:\n\t\t\t// https://github.com/sass/libsass/issues/1271\n\t\t\t//\n\t\t\t// Outputs a unicode entity instead of a code such as \"\\f102\":\n\t\t\t// https://github.com/sass/libsass/issues/1231\n\t\t\tcontent: \"#{'\\\"\\\\' + $character-code + \"\\\"\"}\";\n\t\t}\n\t}\n}\n\n/// Placeholder (and optionally concrete class) for individual icon (IE7 hack)\n///\n/// @access private\n///\n/// @param {String} icon-class\n/// @param {String} character-code - Unicode character code (e.g. f101)\n@mixin _oFtIconsIe7Icon($icon-class, $character-code) {\n\t$icon-selectors: oFtIconsGetSelectors($icon-class);\n\t#{$icon-selectors} {\n\t\t// Weird way of writing this so that Libsass can read it…\n\t\t#{unquote('*') + zoom}: unquote(\"expression(this.runtimeStyle['zoom'] = '1', this.innerHTML = \") + \"'&#x#{$character-code};&nbsp;'\" + unquote(\")\");\n\t}\n}\n\n/// Icon styles for $icon-name\n///\n/// @param {String} icon-name\n/// @param {String} character-code - Unicode character code (e.g. f101)\n@mixin oFtIconsIcon($icon-name, $character-code) {\n\t@include _oFtIconsIe7Icon(icon--#{$icon-name}, $character-code);\n\t@include _oFtIconsStandardsIcon(icon--#{$icon-name}, $character-code);\n\t@include _oFtIconsStandardsIcon(icon--#{$icon-name}--after, $character-code, after);\n}\n","////\n/// @group o-ft-icons\n/// @link http://registry.origami.ft.com/components/o-ft-icons\n////\n\n/// Silent mode\n/// @type Bool\n$o-ft-icons-is-silent: true !default;\n\n/// Whether SVG icon mixin should use the image service or serve\n/// local assets\n///\n/// @type Bool\n$o-ft-icons-use-local-assets: false !default;\n\n/// Font-family\n///\n/// @access private\n/// @type String\n$_o-ft-icons-font-name: 'ft-icons';\n\n/// Has the font-face declaration already been output?\n///\n/// @access private\n/// @type Bool\n$_o-ft-icons-font-face-already-output: false;\n\n/// Have the base styles already been output?\n///\n/// @access private\n/// @type Bool\n$_o-ft-icons-base-styles-already-output: false !default;\n","$o-buttons-is-silent: true;\n@import 'o-buttons/main';\n@import \"o-icons/main\";\n\n@include oFtIconsFontFace();\n\nspan.three-sixty-video-container {\n\tdisplay: inline-block;\n    position: relative;\n\n\t.button-container {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tpadding: 0.5em;\n\t\ttext-align: right;\n\t\tvertical-align: bottom;\n\t\tpointer-events: none;\n\n\t\tbutton {\n\n\t\t\tpointer-events: auto;\n\t\t\tdisplay: inline-block;\n\t\t\t@include oButtons(big, inverse);\n\n\t\t\t&.play-icon {\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 50%;\n\t\t\t\ttop: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tborder: none;\n\t\t\t\twidth: 70px;\n\t\t\t\theight: 70px;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 0;\n\t\t\t\t@include oIconsGetIcon(play, #2bbbbf, 70px);\n\t\t\t}\n\n\t\t\t&.cardboard-icon:before {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tcontent: '';\n\t\t\t\twidth: 1.5em;\n\t\t\t\theight: 1.5em;\n\t\t\t\tbackground: url(\"assets/cardboard.svg\") no-repeat center center;\n\t\t\t\tbackground-size: contain;\n\t\t\t\tvertical-align: top;\n\t\t\t\tmargin: -0.25em 0;\n\t\t\t\tmargin-right: 0.2em;\n\t\t\t}\n\t\t}\n\t}\n\n\tbutton.exit-fullscreen {\n\t\tdisplay: none !important;\n\t}\n\n\t&:fullscreen {\n\t\tbutton.exit-fullscreen {\n\t\t\tdisplay: inline-block !important;\n\t\t}\n\n\t\tbutton.fullscreen {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\t&:-moz-full-screen {\n\t\tbutton.exit-fullscreen {\n\t\t\tdisplay: inline-block !important;\n\t\t}\n\n\t\tbutton.fullscreen {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\t&:-webkit-full-screen {\n\t\tbutton.exit-fullscreen {\n\t\t\tdisplay: inline-block !important;\n\t\t}\n\n\t\tbutton.fullscreen {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n}","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Button size\n/// Ouputs dimensions for a specific button size\n///\n/// @example\n/// .my-button--big {\n/// \t@include oButtonsSize(big);\n/// }\n///\n/// @param {String} $size\n@mixin oButtonsSize($size) {\n\t$button-dimensions: map-get($o-buttons-sizes, $size);\n\t$border-width: map-get($button-dimensions, border-width);\n\t$vertical-padding: 1/2 * (map-get($button-dimensions, min-height) - map-get($button-dimensions, font-size)) - $border-width;\n\n\tbackground-size: map-get($button-dimensions, background-size);\n\tmin-height: map-get($button-dimensions, min-height);\n\tmin-width: map-get($button-dimensions, min-width);\n\tpadding: $vertical-padding map-get($button-dimensions, padding-right) $vertical-padding map-get($button-dimensions, padding-left);\n\tfont-size: map-get($button-dimensions, font-size);\n\tline-height: map-get($button-dimensions, min-height) - $border-width * 2 - $vertical-padding * 2;\n\tborder-width: $border-width;\n}\n\n// Properties for a state of a given theme\n//\n// @param {String} $state - One of normal, hover, focus, selected, disabled, pressed\n@mixin _oButtonsPropertiesForState($theme, $state) {\n\t@if _oButtonsThemeHasState($theme, $state) {\n\t\t$states: map-get($o-buttons-themes, $theme);\n\n\t\t@each $property, $value in map-get($states, $state) {\n\t\t\t#{$property}: #{$value};\n\t\t}\n\t}\n}\n\n/// Button theme construct\n/// Ouputs styles for all button states\n///\n/// @example\n/// .my-button--standout {\n/// \t@include oButtonsTheme(standout);\n/// }\n///\n/// @param {String} $theme\n@mixin oButtonsTheme($theme) {\n\t@include _oButtonsPropertiesForState($theme, normal);\n\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed\n\t&[aria-selected=true], // e.g. A selected tab or page number in pagination\n\t&[aria-pressed=true] { // e.g. A \"follow\" button that is pressed\n\t\t@include _oButtonsPropertiesForState($theme, pressedselected);\n\t}\n\n\t&[disabled] {\n\t\t@include _oButtonsPropertiesForState($theme, disabled);\n\t}\n\n\t&:not([disabled]) {\n\t\t&:focus:not(:hover),\n\t\t#{$o-hoverable-if-hover-enabled} &:hover {\n\t\t\t@include _oButtonsPropertiesForState($theme, hover);\n\t\t}\n\t\t&:active {\n\t\t\t@include _oButtonsPropertiesForState($theme, active);\n\t\t}\n\t}\n\t&:focus:not(:active):not(:hover) {\n\t\t@include _oButtonsPropertiesForState($theme, focus);\n\t}\n}\n\n/// Button construct\n/// Basic button styling and default states for specific theme and size\n///\n/// @example Base styles\n///  .my-button {\n///  \t@include oButtons;\n///  }\n/// @example Custom theme\n///  .my-inverse-button {\n///  \t@include oButtons($theme: inverse);\n///  }\n/// @example Custom size\n///  .my-big-button {\n///  \t@include oButtons(big);\n///  }\n/// @example Custom size and theme\n///  .my-big-standout-button {\n///  \t@include oButtons(big, standout);\n///  }\n///\n/// @param {String} $size (medium)\n/// @param {String} $theme (standard)\n@mixin oButtons($size: medium, $theme: standard) {\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tvertical-align: middle;\n\tmargin: 0;\n\toutline: 0;\n\tborder-style: solid;\n\ttext-align: center;\n\ttext-decoration: none;\n\tfont-family: $o-buttons-font-family;\n\tfont-weight: $o-buttons-font-weight;\n\tborder-radius: $_o-buttons-border-radius;\n\tcursor: pointer;\n\ttransition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;\n\t-moz-appearance: none;\n\t-webkit-appearance: none;\n\tuser-select: none;\n\tbackground-clip: padding-box;\n\t// Prevent fat white type on a dark background\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\n\t@include oButtonsSize($size);\n\t@include oButtonsTheme($theme);\n\n\t// Same as aria-disabled:\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled\n\t// This is a common style for all button themes\n\t&[disabled] {\n\t\tpointer-events: none;\n\t\topacity: 0.4;\n\t\tcursor: default;\n\t}\n\n\t// Remove extra padding in Firefox\n\t&::-moz-focus-inner {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t}\n}\n","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Silent mode: on (true) or off (false)\n/// Set to false to output default button classes\n///\n/// @type Boolean\n$o-buttons-is-silent: true !default;\n\n/// Default button class used when $o-buttons-is-silent is true\n///\n/// @type String\n$o-buttons-class: o-buttons !default;\n\n/// Button font family\n///\n/// This is required to override default system form element styling,\n/// since `<input>`, `<button>`… don't inherit global font styles\n///\n/// @type String\n$o-buttons-font-family: MetricWeb, sans-serif !default;\n\n/// Button font weight\n///\n/// @type String\n$o-buttons-font-weight: 600 !default; // Semibold\n\n/// Button sizes, with their attached properties\n///\n/// @type Map\n$o-buttons-sizes: (\n\tsmall: (\n\t\tbackground-size: 12px,\n\t\tfont-size: 12px,\n\t\tmin-height: 22px,\n\t\tmin-width: 12px,\n\t\tpadding-left: 7px,\n\t\tpadding-right: 7px,\n\t\tborder-width: 1px,\n\t),\n\tmedium: (\n\t\tbackground-size: 16px,\n\t\tfont-size: 16px,\n\t\tmin-height: 26px,\n\t\tmin-width: 26px,\n\t\tpadding-left: 8px,\n\t\tpadding-right: 8px,\n\t\tborder-width: 1px,\n\t),\n\tbig: (\n\t\tbackground-size: 18px,\n\t\tfont-size: 18px,\n\t\tmin-height: 36px,\n\t\tmin-width: 36px,\n\t\tpadding-left: 18px,\n\t\tpadding-right: 18px,\n\t\tborder-width: 1px,\n\t)\n) !default;\n\n/// Border-radius\n///\n/// @type Number\n$_o-buttons-border-radius: 3px;\n\n/// Button themes, with their respective states\n/// Each state is a Map of CSS properties, find\n/// all theme definitions in _themes.scss\n///\n/// @type Map\n$o-buttons-themes: (\n\tstandard: $o-buttons-themes__standard,\n\tstandout: $o-buttons-themes__standout,\n\tinverse: $o-buttons-themes__inverse,\n\tuncolored: $o-buttons-themes__uncolored\n) !default;\n\n/// List of icons to generate classes for icon buttons.\n/// Build service users will only be able to use these icons, but there is\n/// a mixin for people using this via Sass, meaning any icon in 'o-ft-icons' is\n/// available to those users.\n/// Icon names as used in o-ft-icons\n///\n/// @type List\n$o-buttons-icons: \"arrow-left\", \"arrow-right\" !default;\n","////\n/// @group o-icons\n/// @link http://registry.origami.ft.com/components/o-icons\n////\n\n/// Get an SVG icon with PNG fallback for ie6-8\n///\n/// @param {String} $icon-name - this should be a reference to an icon included in o-icons eg arrow-down\n/// @param {String} $color - this should be a hex colour value. Used to color the icon. We suggest using an o-colors an o-colors function.\n/// @param {String} $container-width - this is the width to set the icon containing element to. Defaults to 20px. This value is also used to request a PNG fallback of the right size from the image service.\n/// @param {String} $container-height - this is the height to set the icon containing element to. Defaults to null, and will use the value of $container-width\n/// @param {Bool} $apply-base-styles - defaults to true. If true, will output style rules for the container. If false will only output the background-image property\n/// @param {Bool} $use-local-assets - defaults to true, if true will look for the SVGs to use locally rather than via the image service. Doesn't apply to the fallback which will always be requested from the image service.\n@mixin oIconsGetIcon($icon-name, $color: null, $container-width: 128, $container-height: null, $apply-base-styles: true) {\n\t$service-url: \"https://image.webservices.ft.com/v1/images/raw/fticon:#{$icon-name}\";\n\t$query: \"?source=o-icons\";\n\n\t@if $color != null {\n\t\t$color: str-slice(ie-hex-str($color), 4);\n\t\t$query: $query + \"&tint=%23#{$color},%23#{$color}\";\n\t}\n\n\t@if ($o-icons-use-local-assets == true and $color == null) {\n\t\tbackground-image: url(oAssetsResolve(\"svg/#{$icon-name}.svg\", o-icons));\n\t} @else {\n\t\tbackground-image: url($service-url + $query + \"&format=svg\");\n\t}\n\n\t// ie7/8 fallback. Uses the `\\9` selector hack to target ie6-8.\n\t// Hack is documented here: http://browserhacks.com/#hack-ab1bcc7b3a6544c99260f7608f8e845e\n\t// It still needs to use the build service  <-- what does this comment mean?\n\tbackground-image: url($service-url + $query + \"&format=png&width=#{$container-width}\")\\9;\n\n\twidth: $container-width + 0px;\n\t@if ($container-height == null) {\n\t\t$container-height: $container-width;\n\t}\n\theight: $container-height + 0px;\n\n\t@if ($apply-base-styles == true) {\n\t\t@include oIconsBaseStyles;\n\t}\n}\n\n/// Base styles for all icons\n@mixin oIconsBaseStyles() {\n\tdisplay: inline-block;\n\tbackground-repeat: no-repeat;\n\t// Doesn't work in ie8/7/6 in these cases the icon will fill the available space,\n\t// which is fine if the containing box is the same shape as the icon (which they mostly will be)\n\tbackground-size: contain;\n\tbackground-position: 50%;\n\tbackground-color: transparent;\n\tvertical-align: middle;\n}\n"],"sourceRoot":"/source/"}